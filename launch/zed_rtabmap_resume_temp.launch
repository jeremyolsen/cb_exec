<?xml version="1.0"?>
<!--
Copyright (c) 2018, STEREOLABS.

All rights reserved.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
    <arg name="zed_namespace"		    	default="zed" />

    <arg name="svo_file"              	default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->

    <arg name="zed_node_name"           default="zed_node" />

    <arg name="camera_model"         	default="zed" /> <!-- 0=ZED, 1=ZEDM-->
    <arg name="verbose"              	default="true" />
    <arg name="resolution"           	default="2" /> <!--0=RESOLUTON_HD2K, 1=RESOLUTIION_HD1080, 2=RESOLUTION_HD720, 3=RESOLUTION_VGA -->
    <arg name="frame_rate"           	default="30" />
    <!-- RESOLUTION_HD2K   -> 2208*1242, available framerates: 15 fps.
       RESOLUTION_HD1080 -> 1920*1080, available framerates: 15, 30 fps.
       RESOLUTION_HD720  -> 1280*720,  available framerates: 15, 30, 60 fps.
       RESOLUTION_VGA    -> 672*376,   available framerates: 15, 30, 60, 100 fps. -->

    <arg name="left_camera_frame"           default="zed_left_camera_frame" />
    <arg name="nodelet_manager_name"        default="zed_nodelet_manager" />
    <arg name="depth_topic"                 default="/$(arg zed_namespace)/$(arg zed_node_name)/depth/depth_registered" />

    <arg name="localization_mode"       default="false" />

    <group ns="$(arg zed_namespace)">
        <!-- Nodelet Manager -->
        <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)"  args="manager" output="screen" />

        <!-- ZED Wrapper Node-->
        <include file="$(find zed_wrapper)/launch/zed_camera.launch">
			<arg name="svo_file"            	value="$(arg svo_file)" />
            <arg name="node_name"               value="$(arg zed_node_name)" />
			<arg name="camera_model"        	value="$(arg camera_model)" />
			<!-- <arg name="publish_map_tf"          value="false" />
            <arg name="publish_tf"              value="false" /> -->
            <arg name="publish_urdf"            value="true" />
            <arg name="quality"                 value="1" />
            <arg name="sensing_mode"            value="0" />
            <arg name="depth_stabilization"     value="0" />
            <arg name="resolution"              value="2" />
            <arg name="pose_smoothing"          value="1" />
        </include>

        <!-- Virtual laser scan as nodelet -->
        <!-- "$ sudo apt install ros-kinetic-depthimage-to-laserscan" -->
        <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet zed_nodelet_manager">
             <remap from="scan" to="/$(arg zed_namespace)/$(arg zed_node_name)/laser_scan" />
             <param name="scan_height" value="1"/>
             <param name="output_frame_id" value="$(arg left_camera_frame)"/>
             <param name="range_min" value="0.1"/>
             <remap from="image" to="$(arg depth_topic)"/>
        </node>
    </group>
  
    <!-- RTAB-map Node-->
    <include file="$(find cb_exec)/launch/rtabmap_modified.launch">
      <arg name="rtabmap_args"                  value="" />
      <arg name="localization"                  value="true" />
      <arg name="rgb_topic"               	    value="/$(arg zed_namespace)/$(arg zed_node_name)/rgb/image_rect_color" />
      <arg name="depth_topic"             	    value="/$(arg zed_namespace)/$(arg zed_node_name)/depth/depth_registered" />
      <arg name="camera_info_topic"       	    value="/$(arg zed_namespace)/$(arg zed_node_name)/rgb/camera_info" />
      <arg name="depth_camera_info_topic" 	    value="/$(arg zed_namespace)/$(arg zed_node_name)/depth/camera_info" />
      <arg name="frame_id"                      value="base_link" />
      <arg name="approx_sync"                   value="true"                            />
      <arg name="visual_odometry"               value="false" />
      <arg name="odom_topic"                    value="/odometry/filtered/global" />
      <!-- <arg name="odom_topic"                    value="/$(arg zed_namespace)/$(arg zed_node_name)/odom" /> -->
      <arg name="rviz"                          value="false" />
      <arg name="rtabmapviz"                    value="false" />
      <arg name="publish_tf_map"                value="false" />
      <arg name="queue_size"                    value="10"/>

      
      <!--    laser scans and point clouds    -->
      <arg name="subscribe_scan"               value="true" />
      <arg name="scan_topic"                   value="/$(arg zed_namespace)/$(arg zed_node_name)/laser_scan" />
      

      <!--    optimizing parameters for ground detection-->
      <param name="Grid/MaxGroundAngle"       type="string"   value="60"  />
      <param name="Grid/MaxGroundHeight"      type="string"   value="0.01" />
      <param name="Grid/NoiseFilteringMinNeighbors" type="string" value="20"  />
      <param name="Grid/NoiseFilteringRadius" type="string"   value="0.5" />
      <param name="Grid/FlatObstacleDetected" type="string"   value="false" />
      <param name="Grid/CellSize"             type="string"   value="0.01" />
      <param name="Grid/RangeMax"             type="string"   value="3.0" />
      <param name="Grid/3D"                   type="string"   value="false" />
      <!-- <param name="Grid/DepthRoiRatios"       type="string"   value="0.0 0.0 0.0 0.050" /> -->
      <param name="Grid/MinClusterSize"       type="string"      value="10"/>
      <param name="Grid/ClusterRadius"        type="string"   value="0.02"/>
      <param name="GridGlobal/Eroded"         type="string"   value="false"/>
      <param name="Grid/GroundIsObstacle"     type="string"   value="false"/>
      <param name="Grid/NormalsSegmentation"   type="string"   value="false" />
      <param name="Grid/MaxObstacleHeight"    type="string"   value="0.5"/>
      <param name="GridGlobal/MinSize"        type="string"   value="100.0" /> 
      <param name="RGBD/ProximityBySpace"     type="string"   value="true"/>
      <param name="RGBD/AngularUpdate"        type="string"   value="0.01"/>
      <param name="RGBD/LinearUpdate"         type="string"   value="0.01"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string"   value="true"/>
      <param name="RGBD/LoopClosureReextractFeatures" type="string"  value="true" />
      <param name="Reg/Force3DoF"             type="string"   value="false"/>
      <param name="Vis/MinInliers"            type="string"   value="25"/>
      <param name="Vis/InlierDistance"        type="string"   value="0.1"/>
      <param name="Vis/FeatureType"           type="string"   value="0" />
      <param name="Mem/IncrementalMemory"     type="string"   value="true" />
      
      <!-- Added for testing 7/18/19 - Testing with SURF -->
      <!-- <param name="Vis/FeatureType"           type="string"   value="0" />   use SURF -->
      <!-- <param name="Vis/MaxDepth"              type="string"   value="5" />

      <param name="Rtabmap/TimeThr"           type="string"   value="700" />   
      <param name="Rtabmap/DetectionRate"     type="string"   value="1" />
         
      <param name="Kp/MaxDepth"               type="string"   value="0" />
      <param name="Kp/WordsPerImage"          type="string"   value="200" />
      <param name="Kp/RoiRatios"              type="string"   value="0.03 0.03 0.04 0.04" /> -->
      <!-- <param name="Kp/DetectorStrategy"       type="string"   value="0" />   use SURF -->
      <!-- <param name="Kp/NNStrategy"             type="string"   value="1" />   kdTree -->
      <!-- <param name="Vis/CorNNType"             type="string"   value="2" />


      <param name="SURF/HessianThreshold"     type="string"   value="1000" />
      <param name="SURF/GpuVersion"           type="string"   value="true" />

      <param name="LccBow/MinInliers"         type="string"   value="10" /> -->
      <!-- <param name="LccBow/EstimationType"     type="string"   value="1" /> 3D->2D (PnP) -->

      <!-- <param name="LccReextract/Activated"    type="string"   value="true" />
      <param name="LccReextract/MaxWords"     type="string"   value="500" />
      <param name="LccReextract/MaxDepth"     type="string"   value="10" />
      
      <param name="Grid/FootprintHeight"      type="string"   value="0.30" />
      <param name="Grid/FootprintWidth"       type="string"   value="0.30" />
      <param name="Grid/FootprintLength"      type="string"   value="0.50" />  -->

      <!-- http://answers.ros.org/question/225694/interfacing-rtabmap-and-robot_localization/   -->
      <param name="RGBD/OptimizeIterations"   type="string"   value="0" />

      <param name="RGBD/OptimizeStrategy"     type="string"   value="1" />
      <param name="RGBD/OptimizeRobust"       type="string"   value="true"/>
      <param name="RGBD/OptimizeMaxError"     type="string"   value="2.5"/>

    </include>

    <node pkg="rtabmap_ros" type="rgbd_odometry" name="visual_odometry" output="screen" args="">
      <remap from="rgb/image"       to="/$(arg zed_namespace)/$(arg zed_node_name)/rgb/image_rect_color"/>
      <remap from="depth/image"     to="/$(arg zed_namespace)/$(arg zed_node_name)/depth/depth_registered"/>
      <remap from="rgb/camera_info" to="/$(arg zed_namespace)/$(arg zed_node_name)/rgb/camera_info"/>
      <remap from="odom"            to="/vo"/>

      <param name="frame_id"               type="string" value="base_link" />
      <param name="publish_tf"             type="bool"   value="false" />
      <param name="publish_null_when_lost" type="bool"   value="false" />
      <param name="approx_sync"            type="bool"   value="true" />

      <param name="Reg/Force3DoF"          type="string" value="false"/>
      <param name="Vis/InlierDistance"     type="string" value="0.05"/>
      <param name="Odom/FillInfoData"      type="string" value="true"/>
      <param name="Odom/ResetCountdown"    type="string" value="1"/>
      <param name="Odom/Holonomic"         type="bool"   value="false" />
      <param name="Odom/Force2D"           type="bool"   value="true" />
      <param name="Vis/FeatureType"        type="string" value="0"/> 
      <param name="OdomF2M/MaxSize"        type="string" value="1000"/>
      <param name="SURF/HessianThreshold"  type="string" value="1000" />
      <!-- <param name="SURF/GpuVersion"           type="bool"   value="true" /> -->
      <param name="Vis/MaxFeatures"        type="string" value="600"/>
      <param name="Odom/GuessMotion"       type="bool"   value="true"/>
      <param name="Vis/MaxDepth"           type="string" value="20"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager" output="screen"/>
    <!-- Create point cloud for the obstacles detection nodelet -->
    <node pkg="nodelet" type="nodelet" name="points_xyz" args="load rtabmap_ros/point_cloud_xyz standalone_nodelet">
        <remap from="depth/image"       to="/$(arg zed_namespace)/$(arg zed_node_name)/depth/depth_registered"/>
        <remap from="depth/camera_info" to="/$(arg zed_namespace)/$(arg zed_node_name)/depth/camera_info"/>
        <remap from="cloud"                 to="depth_cloud"/>
        
        <param name="voxel_size" type="double" value="0.05"/>
        <param name="decimation" type="int" value="4"/>
    </node>


    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection standalone_nodelet">
        <remap from="cloud" to="/depth_cloud" />
        <remap from="obstacles" to="/obstacles_cloud"/>
        <remap from="ground" to="/ground_cloud" />

        <param name="frame_id" type="string" value="base_link"/>
        <param name="map_frame_id" type="string" value="map"/>
        <param name="wait_for_transform" type="bool" value="true"/>

    </node>
    
</launch>
